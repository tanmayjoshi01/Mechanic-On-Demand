# Docker Compose configuration for Mechanic On Demand Application
version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mechanic_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mechanic_on_demand
      MYSQL_USER: mechanic_user
      MYSQL_PASSWORD: mechanic_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - mechanic_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: mechanic_backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mechanic_on_demand?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: mechanic_user
      SPRING_DATASOURCE_PASSWORD: mechanic_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      JWT_SECRET: mySecretKey123456789012345678901234567890
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mechanic_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/me"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Nginx)
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: mechanic_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - mechanic_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: mechanic_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mechanic_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # phpMyAdmin (Database Management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mechanic_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - mechanic_network

# Networks
networks:
  mechanic_network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local